{"version":3,"sources":["Components/Register.js","Components/Login.js","Components/UserDetails.js","Components/Edit.js","Components/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","useState","id","setId","uname","setUname","pass","setPass","check","setCheck","money","setMoney","history","useHistory","className","type","placeholder","onChange","e","target","value","onClick","isNaN","length","alert","addUser","push","Login","username","setUsername","upass","setUpass","checkUser","to","UserDetails","flag","setFlag","company","setCompany","cost","setCost","add","addMove","ind","details","fn","current","setEditUser","Edit","parseInt","user","password","undefined","edit","userIndex","Admin","users","map","i","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","class","Collapse","Body","expenses","element","elementIndex","expense","customerIndex","purchaseIndex","erasePurchase","customIndex","eraseCustomer","App","uIndex","setUindex","setUsers","n","p","cash","comp","price","someIndex","m","editIndex","pIndex","cIndex","splice","exact","path","component","clients","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uRAGe,SAASA,EAASC,GAAQ,IAAD,EAChBC,mBAAS,GADO,mBAC7BC,EAD6B,KACzBC,EADyB,OAEVF,mBAAS,IAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,OAGZJ,mBAAS,IAHG,mBAG7BK,EAH6B,KAGvBC,EAHuB,OAIVN,mBAAS,IAJC,mBAI7BO,EAJ6B,KAItBC,EAJsB,OAKVR,oBAAU,GALA,mBAK7BS,EAL6B,KAKtBC,EALsB,KAOhCC,EAAUC,cA2Bd,OACG,yBAAKC,UAAU,4CACX,wBAAIA,UAAU,mBAAd,YACH,yBAAKA,UAAU,OAEZ,yBAAKA,UAAU,OAEf,2BAAOC,KAAK,OAAOb,GAAG,KAAKY,UAAU,gBAAgBE,YAAY,KAAKC,SAAU,SAACC,GAAKf,EAAMe,EAAEC,OAAOC,YAMxG,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,OAAOY,UAAU,gBAAgBE,YAAY,YAAYC,SAAU,SAACC,GAAKb,EAASa,EAAEC,OAAOC,YAMpH,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,OAAOY,UAAU,gBAAgBE,YAAY,WAAWC,SAAU,SAACC,GAAKX,EAAQW,EAAEC,OAAOC,YAMlH,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,YAAYY,UAAU,gBAAgBE,YAAY,mBAAmBC,SAAU,SAACC,GAAKT,EAASS,EAAEC,OAAOC,YAMhI,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,QAAQY,UAAU,gBAAgBE,YAAY,gBAAgBC,SAAU,SAACC,GAAKP,EAASO,EAAEC,OAAOC,YAKzH,yBAAKN,UAAU,OACX,yBAAKA,UAAU,OAEX,4BAAQA,UAAU,yCAAyCO,QA5ElD,WAEbC,MAAMpB,IAAmB,IAAZA,EAAGqB,OACjBC,MAAO,+BAGNpB,EAAMmB,OAAS,EACfC,MAAO,uCAGPlB,EAAKiB,OAAS,EACdC,MAAO,yCAGPhB,IAAUF,EAIVI,EAAQ,GAAKA,EAAQ,IACrBc,MAAM,uDAGVxB,EAAMyB,QAAQvB,EAAGE,EAAME,EAAKI,GAC5BE,EAAQc,KAAK,MARTF,MAAO,2BA6DH,SACA,4BAAQV,UAAU,yCAAyCO,QAAS,kBAAIT,EAAQc,KAAK,OAArF,WCtFD,SAASC,EAAM3B,GAAQ,IAAD,EAEDC,mBAAS,IAFR,mBAE1B2B,EAF0B,KAEhBC,EAFgB,OAGP5B,mBAAS,IAHF,mBAG1B6B,EAH0B,KAGnBC,EAHmB,KAK3BnB,EAAUC,cAWhB,OACI,yBAAKC,UAAU,yCACZ,wBAAIA,UAAU,gBAAd,WACH,yBAAKA,UAAU,OAEZ,yBAAKA,UAAU,OAEf,2BAAOC,KAAK,OAAOD,UAAU,gBAAgBE,YAAY,YAAYC,SAAU,SAACC,GAAKW,EAAYX,EAAEC,OAAOC,YAM7G,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOD,UAAU,gBAAgBE,YAAY,WAAWC,SAAU,SAACC,GAAKa,EAASb,EAAEC,OAAOC,YAMzG,yBAAKN,UAAU,OACX,yBAAKA,UAAU,OACX,4BAAQA,UAAU,oBAAoBO,QAjC9B,WACA,SAAZO,GAAgC,SAATE,EACvBlB,EAAQc,KAAK,UACN1B,EAAMgC,UAAUJ,EAAUE,GACjClB,EAAQc,KAAR,WAAiBE,IAEfJ,MAAM,uCA2BJ,WAGR,yBAAKV,UAAU,YACX,yBAAKA,UAAU,OAAf,+BAE4B,kBAAC,IAAD,CAAMmB,GAAG,aAAY,4BAAQnB,UAAU,kBAAlB,gBC9C9C,SAASoB,EAAYlC,GAEhC,IAAIY,EAAUC,cAFyB,EAIfZ,oBAAS,GAJM,mBAIhCkC,EAJgC,KAI1BC,EAJ0B,OAMTnC,mBAAS,IANA,mBAMhCoC,EANgC,KAMvBC,EANuB,OAOfrC,mBAAS,GAPM,mBAOhCsC,EAPgC,KAO1BC,EAP0B,KASjCC,EAAM,WACRL,GAASD,GACTnC,EAAM0C,QAAQL,EAASE,EAAMvC,EAAM2C,MAwBvC,OACI,yBAAK7B,UAAU,oCACX,uCAAad,EAAM4C,QAAQC,GAA3B,MACA,yBAAK/B,UAAU,kBACf,4BAAQA,UAAU,wBAAwBO,QAAS,WAAKe,GAASD,KAAjE,UACA,4BAAQrB,UAAU,uBAAuBO,QAAS,WAAKG,MAAM,2BAA6BxB,EAAM4C,QAAQE,QAAU,OAAlH,WACA,kBAAC,IAAD,CAAMb,GAAG,SAAQ,4BAAQnB,UAAU,uBAAuBO,QAASrB,EAAM+C,YAAY/C,EAAM2C,MAA1E,SACjB,4BAAQ7B,UAAU,yBAAyBO,QAAS,WAAKT,EAAQc,KAAK,OAAtE,QA5BAS,EAEA,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,2BAAOC,KAAK,OAAOE,SAAU,SAACC,GAAKoB,EAAWpB,EAAEC,OAAOC,QAASJ,YAAY,kBAGhF,yBAAKF,UAAU,OACX,2BAAOC,KAAK,OAAOE,SAAU,SAACC,GAAKsB,EAAQtB,EAAEC,OAAOC,WAExD,yBAAKN,UAAU,OACX,4BAAQO,QAASoB,GAAjB,oBAKR,gCC9BG,SAASO,EAAKhD,GAAQ,IAAD,EAEZC,mBAASgD,SAASjD,EAAMkD,KAAKhD,KAFjB,mBAEzBA,EAFyB,KAErBC,EAFqB,OAGNF,mBAASD,EAAMkD,KAAKL,IAHd,mBAGzBzC,EAHyB,KAGlBC,EAHkB,OAIRJ,mBAASD,EAAMkD,KAAKC,UAJZ,mBAIzB7C,EAJyB,KAInBC,EAJmB,OAKNN,mBAASD,EAAMkD,KAAKC,UALd,mBAKzB3C,EALyB,KAKlBC,EALkB,OAMNR,mBAASD,EAAMkD,KAAKJ,SANd,mBAMzBpC,EANyB,KAMlBC,EANkB,KAQ5BC,EAAUC,cA6Bd,OACG,yBAAKC,UAAU,4CACX,wBAAIA,UAAU,mBAAd,QACH,yBAAKA,UAAU,OAEZ,yBAAKA,UAAU,OAEf,2BAAOC,KAAK,OAAOb,GAAG,KAAKY,UAAU,gBAAgBM,MAAOlB,EAAIe,SAAU,SAACC,GAAKf,EAAMe,EAAEC,OAAOC,YAMlG,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,OAAOY,UAAU,gBAAgBM,MAAOhB,EAAOa,SAAU,SAACC,GAAKb,EAASa,EAAEC,OAAOC,YAM1G,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,OAAOY,UAAU,gBAAgBM,MAAOd,EAAMW,SAAU,SAACC,GAAKX,EAAQW,EAAEC,OAAOC,YAMxG,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,YAAYY,UAAU,gBAAgBM,MAAOZ,EAAOS,SAAU,SAACC,GAAKT,EAASS,EAAEC,OAAOC,YAM/G,yBAAKN,UAAU,OAEZ,yBAAKA,UAAU,OACf,2BAAOC,KAAK,OAAOb,GAAG,QAAQY,UAAU,gBAAgBM,MAAOV,EAAOO,SAAU,SAACC,GAAKP,EAASO,EAAEC,OAAOC,YAK3G,yBAAKN,UAAU,OACX,yBAAKA,UAAU,OAEX,4BAAQA,UAAU,4BAA4BO,QA9EzC,gBAEK+B,IAAdlD,EAAGqB,SACHD,MAAMpB,IAAmB,IAAZA,EAAGqB,OAKhBnB,EAAMmB,OAAS,EACfC,MAAO,uCAGPlB,EAAKiB,OAAS,EACdC,MAAO,yCAGPhB,IAAUF,EAIVI,EAAQ,GAAKA,EAAQ,IACrBc,MAAM,uDAGVxB,EAAMqD,KAAKnD,EAAGE,EAAME,EAAKI,EAAOV,EAAMsD,WACtC1C,EAAQc,KAAR,WAAiBtB,KARboB,MAAO,yBAbRA,MAAO,iCA0EF,Y,4BCrFD,SAAS+B,EAAMvD,GAAQ,IAAD,EAGTC,mBAAS,GAHA,mBAG1BkC,EAH0B,UAajC,OACI,yBAAKrB,UAAU,aAEVd,EAAMwD,MAAMC,KAAK,SAACvC,EAAEwC,GAEjB,OAEI,kBAACC,EAAA,EAAD,CAAWC,iBAAiB,KACxB,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACA,0BAAMhD,UAAU,eAAeI,EAAE2B,IACjC,0BAAM/B,UAAU,eAAhB,IAAgCI,EAAEhB,IAClC,kBAACyD,EAAA,EAAUI,OAAX,CAAkBC,GAAIC,IAAQC,QAAQ,OAAOC,SAAUhC,EAAMrB,UAAU,QACvE,0BAAMsD,MAAM,UAGZ,kBAACT,EAAA,EAAUU,SAAX,CAAoBF,SAAUhC,GAC9B,kBAAC0B,EAAA,EAAKS,KAAN,KAECpD,EAAEqD,SAASd,KAAK,SAACe,EAASC,GACvB,OAEI,yBAAK3D,UAAU,YACX,yBAAKA,UAAU,OAAO0D,EAAQnC,SAC9B,yBAAKvB,UAAU,OAAO0D,EAAQE,SAC9B,yBAAK5D,UAAU,OAAM,4BAAQO,QAAS,WAjCrD,IAACsD,EAAeC,EAAfD,EAiCsEF,EAjCvDG,EAiCoElB,EA/BrG1D,EAAM6E,cAAcF,EAAeC,KA+BkB,KAAwDH,EAAxD,IAAuE,OAAvE,IAAkFf,GAAvG,SAKZ,yBAAK5C,UAAU,OAAM,4BAAQA,UAAU,iBAAiBO,QAAS,WAjC9E,IAACyD,IAiCsFpB,EAhC/F1D,EAAM+E,cAAcD,KAgCsB,mBCwDlCE,MA5Ff,WAAgB,IAAD,EAEe/E,mBAAS,GAFxB,mBAENgF,EAFM,KAEEC,EAFF,OAGajF,mBAAS,CACjC,CACEC,GAAI,UACJ2C,GAAI,UACJM,SAAU,OACVL,QAAS,IACTyB,SAAU,CACR,CAAClC,QAAS,cAAeqC,QAAS,KAClC,CAACrC,QAAS,OAAQqC,QAAS,OAG/B,CACExE,GAAI,UACJ2C,GAAI,UACJM,SAAU,WACVL,QAAS,KACTyB,SAAU,CACR,CAAClC,QAAS,SAAUqC,QAAS,MAC7B,CAACrC,QAAS,MAAOqC,QAAS,SArBnB,mBAGNlB,EAHM,KAGC2B,EAHD,KA0BP1D,EAAU,SAACvB,EAAGkF,EAAEC,EAAEC,GAEtBH,EAAS,GAAD,mBAAK3B,GAAL,CAAW,CAACtD,GAAIA,EAAI2C,GAAIuC,EAAGjC,SAAUkC,EAAGvC,QAASwC,EAAMf,SAAU,QAGrE7B,EAAU,SAAC6C,EAAMC,EAAO9B,GAC5BF,EAAME,GAAGa,SAAS7C,KAAK,CAACW,QAASkD,EAAMb,QAASc,IAChDhC,EAAME,GAAGZ,SAAW0C,EACpBL,EAAS,YAAI3B,KAETxB,EAAY,SAACJ,EAAUuB,GAC3B,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAMjC,OAAQmC,IAEhC,GAAGF,EAAME,GAAGb,KAAOjB,GAAY4B,EAAME,GAAGP,WAAaA,EAEnD,OAAO,EAGX,OAAO,GAGFJ,EAAc,SAAC0C,GACnBP,EAAUO,IAGNpC,EAAO,SAACnD,EAAIkF,EAAGC,EAAGK,EAAGC,GAC1BnC,EAAMmC,GAAWzF,GAAKA,EACtBsD,EAAMmC,GAAW9C,GAAKuC,EACtB5B,EAAMmC,GAAWxC,SAAWkC,EAC5B7B,EAAMmC,GAAW7C,QAAU4C,EAC3BlC,EAAMmC,GAAWpB,SAAWf,EAAMmC,GAAWpB,SAC7CY,EAAS,YAAI3B,KAGRqB,EAAgB,SAACe,EAAQC,GAE5BrC,EAAMqC,GAAQtB,SAASuB,OAAOF,EAAQ,GACtCT,EAAS,YAAI3B,KAGVuB,EAAgB,SAACU,GACrBjC,EAAMsC,OAAOL,EAAW,GACxBN,EAAS,YAAI3B,KAEhB,OACE,yBAAK1C,UAAU,8BAEb,kBAAC,IAAD,KAEA,kBAAC,IAAD,KACC0C,EAAMC,KAAK,SAACvC,EAAEwC,GACb,OACE,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAI,WAAM9E,EAAE2B,IAAMoD,UAAY,WAAK,OAAQ,kBAAC/D,EAAD,CAAasB,MAAOA,EAAOb,IAAKe,EAAGd,QAAS1B,EAAGwB,QAASA,EAASK,YAAaA,UAGxI,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,YAAYC,UAAW,WAAK,OAAQ,kBAAClG,EAAD,CAAU0B,QAASA,OACzE,kBAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,IAAIC,UAAW,WAAK,OAAO,kBAACtE,EAAD,CAAOuE,QAAS1C,EAAOxB,UAAWA,OAC/E,kBAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,QAAQC,UAAW,WAAK,OAAO,kBAACjD,EAAD,CAAMM,UAAW2B,EAAQ/B,KAAMM,EAAMyB,GAASxD,QAASA,EAAS4B,KAAMA,OACvH,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,SAASC,UAAW,WAAK,OAAO,kBAAC1C,EAAD,CAAOC,MAAOA,EAAOqB,cAAeA,EAAeE,cAAeA,WCrFxGoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9d19ea29.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function Register(props) {\r\n    const [id, setId] = useState(0);\r\n    const [uname, setUname] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [check, setCheck] = useState('');\r\n    const [money, setMoney] = useState(-1);\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = () => {\r\n        \r\n        if (isNaN(id) || id.length!==9) {\r\n           alert ('ID must be of 9 digits only');\r\n           return;\r\n        }\r\n        if (uname.length < 4) {\r\n            alert ('Name must be of more than 4 letters');\r\n            return;\r\n        }\r\n        if (pass.length < 6) {\r\n            alert ('Password must be of minimum 6 letters')\r\n            return;\r\n        }\r\n        if (check !== pass) {\r\n            alert ('Passwords don\\'t match');\r\n            return;\r\n        } \r\n        if (money < 0 || money > 1000000) {\r\n            alert('Current money input must be between 0 to 1,000,000');\r\n            return;\r\n        }\r\n        props.addUser(id,uname,pass,money);\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n       <div className=\"container text-center register-container\">\r\n           <h3 className=\"register-header\">Register</h3>\r\n        <div className=\"row\">\r\n        \r\n           <div className=\"col\">\r\n               \r\n           <input type=\"text\" id=\"id\" className=\"my-input mt-2\" placeholder=\"ID\" onChange={(e)=>{setId(e.target.value)}}/>\r\n           </div>\r\n           \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"name\" className=\"my-input mt-2\" placeholder=\"Full Name\" onChange={(e)=>{setUname(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"pass\" className=\"my-input mt-2\" placeholder=\"Password\" onChange={(e)=>{setPass(e.target.value)}}/>\r\n           </div>\r\n           \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"checkpass\" className=\"my-input mt-2\" placeholder=\"Confirm Password\" onChange={(e)=>{setCheck(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n        \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"money\" className=\"my-input mt-2\" placeholder=\"Current Money\" onChange={(e)=>{setMoney(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n       \r\n                <button className=\"btn btn-primary mt-4 mb-4 mr-4 reg-btn\" onClick={handleSubmit}>Enter</button>\r\n                <button className=\"btn btn-primary mt-4 mb-4 ml-4 reg-btn\" onClick={()=>history.push('/')}>Back</button>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Login(props) {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [upass, setUpass] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleEnter = () => {\r\n        if (username == 'ADMIN' && upass == 'ADMIN') {\r\n            history.push('/admin');\r\n        } else if (props.checkUser(username, upass)) {\r\n            history.push(`/${username}`);\r\n        }\r\n         else alert('User Name Or Password don\\'t match')\r\n        \r\n    }\r\n    return (\r\n        <div className=\"container text-center login-container\">\r\n           <h3 className=\"login-header\">SV-BANK</h3>\r\n        <div className=\"row\">\r\n        \r\n           <div className=\"col\">\r\n               \r\n           <input type=\"text\" className=\"my-input mt-2\" placeholder=\"User Name\" onChange={(e)=>{setUsername(e.target.value)}}/>\r\n           </div>\r\n           \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" className=\"my-input mt-2\" placeholder=\"Password\" onChange={(e)=>{setUpass(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <button className=\"btn btn-info mt-2\" onClick={handleEnter}>Enter</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"row mt-4\">\r\n            <div className=\"col\">\r\n                \r\n            Don't have an account?      <Link to=\"/register\"><button className=\"btn btn-danger\">Register</button></Link>\r\n            </div>\r\n           \r\n           \r\n           \r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function UserDetails(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const [company, setCompany] = useState('');\r\n    const [cost, setCost] = useState(0);\r\n\r\n    const add = () => {\r\n        setFlag(!flag);       \r\n        props.addMove(company, cost, props.ind);\r\n    }\r\n    const addExpense = () => {\r\n        if (flag) {\r\n            return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <input type=\"text\" onChange={(e)=>{setCompany(e.target.value)}} placeholder=\"Expense name\"/>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <input type=\"text\" onChange={(e)=>{setCost(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button onClick={add}>Report Expense</button>\r\n                </div>\r\n            </div>\r\n\r\n        )} else return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"container text-center text-white\">\r\n            <h3>Welcome {props.details.fn} !</h3>\r\n            <div className=\"action-buttons\">\r\n            <button className=\"btn btn-danger action\" onClick={()=>{setFlag(!flag)}}>Action</button>\r\n            <button className=\"btn btn-info balance\" onClick={()=>{alert('Your current balance is ' + props.details.current + '$')}}>Balance</button>\r\n            <Link to=\"/edit\"><button className=\"btn btn-success edit\" onClick={props.setEditUser(props.ind)}>EDIT</button></Link>\r\n            <button className=\"btn btn-secondary exit\" onClick={()=>{history.push('/')}}>EXIT</button>\r\n            {addExpense()}\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function Edit(props) {\r\n\r\n    const [id, setId] = useState(parseInt(props.user.id));\r\n    const [uname, setUname] = useState(props.user.fn);\r\n    const [pass, setPass] = useState(props.user.password);\r\n    const [check, setCheck] = useState(props.user.password);\r\n    const [money, setMoney] = useState(props.user.current);\r\n\r\n    let history = useHistory();\r\n\r\n    const editUser = () => {\r\n        \r\n        if (id.length !== undefined) {\r\n        if (isNaN(id) || id.length!==9) {\r\n           alert ('ID must be of 9 digits only');\r\n           return;\r\n        }\r\n        }\r\n        if (uname.length < 4) {\r\n            alert ('Name must be of more than 4 letters');\r\n            return;\r\n        }\r\n        if (pass.length < 6) {\r\n            alert ('Password must be of minimum 6 letters')\r\n            return;\r\n        }\r\n        if (check !== pass) {\r\n            alert ('Passwords don\\'t match');\r\n            return;\r\n        } \r\n        if (money < 0 || money > 1000000) {\r\n            alert('Current money input must be between 0 to 1,000,000');\r\n            return;\r\n        }\r\n        props.edit(id,uname,pass,money, props.userIndex);\r\n        history.push(`/${uname}`);\r\n    }\r\n    return (\r\n       <div className=\"container text-center register-container\">\r\n           <h3 className=\"register-header\">Edit</h3>\r\n        <div className=\"row\">\r\n        \r\n           <div className=\"col\">\r\n               \r\n           <input type=\"text\" id=\"id\" className=\"my-input mt-2\" value={id} onChange={(e)=>{setId(e.target.value)}}/>\r\n           </div>\r\n           \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"name\" className=\"my-input mt-2\" value={uname} onChange={(e)=>{setUname(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"pass\" className=\"my-input mt-2\" value={pass} onChange={(e)=>{setPass(e.target.value)}}/>\r\n           </div>\r\n           \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n           \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"checkpass\" className=\"my-input mt-2\" value={check} onChange={(e)=>{setCheck(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n\r\n        <div className=\"row\">\r\n        \r\n           <div className=\"col\">\r\n           <input type=\"text\" id=\"money\" className=\"my-input mt-2\" value={money} onChange={(e)=>{setMoney(e.target.value)}}/>\r\n           </div>\r\n         \r\n           \r\n        </div>  \r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n       \r\n                <button className=\"btn btn-primary mt-4 mb-4\" onClick={editUser}>Enter</button>\r\n            </div>\r\n           \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Admin(props) {\r\n\r\n\r\n    const [flag, setFlag] = useState(1);\r\n\r\n    const eraseExpense = (customerIndex, purchaseIndex) => {\r\n      \r\n        props.erasePurchase(customerIndex, purchaseIndex);\r\n    }\r\n\r\n   const del = (customIndex) => {\r\n       props.eraseCustomer(customIndex);\r\n   }\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            {props.users.map( (e,i) => {\r\n\r\n                return (\r\n              \r\n                    <Accordion defaultActiveKey=\"0\">\r\n                        <Card>\r\n                            <Card.Header>\r\n                            <span className=\"mr-4 mySpan\">{e.fn}</span>\r\n                            <span className=\"ml-4 mySpan\"> {e.id}</span>\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey={flag} className=\"ml-4\">                      \r\n                            <span class=\"dot\"></span>\r\n                            </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={flag}>\r\n                            <Card.Body>\r\n                                \r\n                            {e.expenses.map( (element, elementIndex) => {\r\n                                return (\r\n                                    \r\n                                    <div className=\"row mb-2\">\r\n                                        <div className=\"col\">{element.company}</div>\r\n                                        <div className=\"col\">{element.expense}</div>\r\n                                        <div className=\"col\"><button onClick={()=>{eraseExpense(elementIndex,i)}}>X {elementIndex} {'\\u00A0'} {i}</button> </div>\r\n                                        \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            <div className=\"row\"><button className=\"btn btn-danger\" onClick={()=>{del(i)}}>Cancel</button></div>\r\n                            </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                  \r\n                )\r\n                \r\n            })}\r\n   \r\n        </div>        \r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\n\n//styles\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n//components\nimport Register from './Components/Register'\nimport Login from './Components/Login'\nimport UserDetails from './Components/UserDetails'\nimport Edit from './Components/Edit'\nimport Admin from './Components/Admin'\n\nfunction App() {\n\n  const [uIndex, setUindex] = useState(0);\n  const [users, setUsers] = useState([\n    {\n      id: 123456789,\n      fn: 'gadileh',\n      password: 'pass',\n      current: 250,\n      expenses: [\n        {company: 'Hushpuppies', expense: 300},\n        {company: 'Nike', expense: 650}\n      ]\n    },\n    {\n      id: 987654321,\n      fn: 'chenkys',\n      password: 'password',\n      current: 2500,\n      expenses: [\n        {company: 'Adidas', expense: 1200},\n        {company: 'NBA', expense: 700}\n      ]\n    }\n  ]);\n\n  const addUser = (id,n,p,cash) => {\n    \n    setUsers([...users,{id: id, fn: n, password: p, current: cash, expenses: []} ]);\n  }\n  \n  const addMove = (comp, price, i) => {\n    users[i].expenses.push({company: comp, expense: price});\n    users[i].current -= price;\n    setUsers([...users]);\n  }\n  const checkUser = (username, password) =>{\n    for (let i = 0; i < users.length; i++) {      \n      \n      if(users[i].fn === username && users[i].password === password){\n\n        return true;\n      }\n    }\n    return false;\n   }\n\n   const setEditUser = (someIndex) => {\n     setUindex(someIndex);\n   }\n\n   const edit = (id, n, p, m, editIndex) => {\n    users[editIndex].id = id;\n    users[editIndex].fn = n;\n    users[editIndex].password = p;\n    users[editIndex].current = m;\n    users[editIndex].expenses = users[editIndex].expenses;\n    setUsers([...users]);\n   }\n\n   const erasePurchase = (pIndex, cIndex) => {\n    \n      users[cIndex].expenses.splice(pIndex, 1);\n      setUsers([...users])\n   }\n\n   const eraseCustomer = (someIndex) => {\n     users.splice(someIndex, 1);\n     setUsers([...users]);\n   }\n  return (\n    <div className=\"container mycontainer mt-4\">\n  \n      <Router>\n        \n      <Switch>\n      {users.map( (e,i) => {\n        return (\n          <Route exact path={`/${e.fn}`} component= {()=>{return (<UserDetails users={users} ind={i} details={e} addMove={addMove} setEditUser={setEditUser}/> )}} />\n        )\n      })}\n        <Route exact path='/register' component={()=>{return (<Register addUser={addUser}/>)}}/>\n        <Route exact path='/' component={()=>{return <Login clients={users} checkUser={checkUser} />}} />\n        <Route exact path='/edit' component={()=>{return <Edit userIndex={uIndex} user={users[uIndex]} addUser={addUser} edit={edit} />}} />\n        <Route exact path='/admin' component={()=>{return <Admin users={users} erasePurchase={erasePurchase} eraseCustomer={eraseCustomer}/>}} />\n      </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}